/**
 * @def UTILS_H_
 * @brief contiene sottoprogrammi generali (non direttamente collegati alle funzionalità del programma)
 *
 */

#ifndef UTILS_H_
#define UTILS_H_


#include "types.h"
#include <stdio.h>

/**
 * @fn int sottostrEqual(char*, char*)
 * @brief determina se str1 è una sottostringa di str2
 * @param str1
 * @param str2
 * @return 1 se str1 è una sottostringa di str2, 0 altrimenti
 */
int sottostrEqual(char * str1, char* str2);

/**
 * @fn int strEqual(char*, char*)
 * @brief determina se str1 == str2
 * @param str1
 * @param str2
 * @return 1 se str1 == str2, altrimenti 0
 */
int strEqual(char* str1, char* str2);


/**
 * @fn int strMin(char*, char*)
 * @brief determina se str1 viene prima di str2 in ordine alfabetico
 * @param str1
 * @param str2
 * @return 1 se str1 viene prima di str2 in ordine alfabetico, altrimenti 0 (anche quando sono uguali)
 */
int strMin(char* str1, char* str2);

/**
 * @fn void strToUpper(char*)
 * @brief converte in maiuscolo tutti i caratteri della stringa
 * @pre stringa con caratteri minuscoli/maiuscoli
 * @post stringa con caratteri tutti maiuscoli
 * @param str
 */
void strToUpper(char * str);


/**
 * @fn int apriFile(FILE**, char*, char*)
 * @brief apre il file
 * @param file
 * @param file_name è il percorso del file da aprire
 * @param mode la modalità con cui aprire il file
 * @return 1 se il file è stato aperto senza errori, 0 se sono avvenuti errori
 */
int apriFile(FILE** file, char* file_name, char* mode);

/**
 * @fn void clearFile(char*)
 * @brief pulisce il file
 * @param file_name
 */
void clearFile(char* file_name);


/**
 * @fn void isNum(char*, int*)
 * @brief determina se str è un numero valido: intero, float
 * @param str
 * @param flag_errore = 1 se str non è un numero
 */
void isNum(char *str, int* flag_errore);

/**
 * @fn void isPositive(float, int*)
 * @brief determina se quantita è un numero positivo
 * @param quantita
 * @param flag_errore = 1 se quantita è <= 0
 */
void isPositive( float quantita, int* flag_errore);


/**
 * @fn void checkFloat(float, int*)
 * @brief determina se quantita_float è un numero decimale
 *        imposta flag_errore = 1 se quantita_flaot è un numero decimale
 * @param quantita_float
 * @param flag_errore
 */
void checkFloat(float quantita_float, int* flag_errore);

#endif /* UTILS_H_ */


